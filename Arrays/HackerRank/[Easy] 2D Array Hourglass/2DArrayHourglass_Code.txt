using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Collections;
using System.ComponentModel;
using System.Diagnostics.CodeAnalysis;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Runtime.Serialization;
using System.Text.RegularExpressions;
using System.Text;
using System;

class Result
{

    /*
     * Complete the 'hourglassSum' function below.
     *
     * The function is expected to return an INTEGER.
     * The function accepts 2D_INTEGER_ARRAY arr as parameter.
     */

    public static int hourglassSum(List<List<int>> arr)
    {
        int x = arr.Count;
        int y = arr[0].Count;
        int maxSum = int.MinValue;
        int testSum = 0;
        
        for (int i = 0 ; i < y ; i++){
            // Break if the corner of the 3x3 is greater then the size
            if (i+3 > y)
            {
                break;
            }
            for (int j = 0 ; j < x ; j++){
                // Break if the corner of the 3x3 is greater then the size
                if (j+3 > x)
                {
                    break;
                }
                
                // Calculate some of the hourglass
                testSum = arr[i][j] + arr[i][j+1] + arr[i][j+2]
                                    + arr[i+1][j+1]
                      + arr[i+2][j] + arr[i+2][j+1] + arr[i+2][j+2]; 
                
                if (testSum > maxSum)
                {
                    maxSum = testSum;
                }
            } 
        }
        return maxSum;
    }
}

class Solution
{
    public static void Main(string[] args)
    {
        TextWriter textWriter = new StreamWriter(@System.Environment.GetEnvironmentVariable("OUTPUT_PATH"), true);

        List<List<int>> arr = new List<List<int>>();

        for (int i = 0; i < 6; i++)
        {
            arr.Add(Console.ReadLine().TrimEnd().Split(' ').ToList().Select(arrTemp => Convert.ToInt32(arrTemp)).ToList());
        }

        int result = Result.hourglassSum(arr);

        textWriter.WriteLine(result);

        textWriter.Flush();
        textWriter.Close();
    }
}